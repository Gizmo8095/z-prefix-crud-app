{"ast":null,"code":"var _jsxFileName = \"/home/mason/projects/z-prefix-crud-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Inventory from \"./components/Inventory\";\nimport ItemDetails from \"./components/ItemDetails\";\nimport MyItems from \"./components/MyItems\";\nimport Login from \"./components/Login\";\nimport AppContext from \"./AppContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itemList, setItemList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null); // New state to track the current user\n\n  const provided = {\n    itemList,\n    setItemList,\n    userList,\n    setUserList,\n    currentUser,\n    // Pass the currentUser state to the context provider\n    setCurrentUser // Pass the setCurrentUser function to the context provider\n  };\n\n  // Function to handle login\n  const handleLogin = credentials => {\n    // Perform the authentication logic here, e.g., checking the credentials against the userList state.\n    const matchedUser = userList.find(user => user.username === credentials.username && user.password === credentials.password);\n    if (matchedUser) {\n      setCurrentUser(matchedUser);\n    } else {\n      // Handle authentication failure (e.g., show an error message).\n      console.log(\"Invalid username or password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: provided,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Inventory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"item/:id\",\n          element: /*#__PURE__*/_jsxDEV(ItemDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ifb1sS0yDuautGVmrDMjH4kCXjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Router","Route","Routes","Inventory","ItemDetails","MyItems","Login","AppContext","jsxDEV","_jsxDEV","App","_s","itemList","setItemList","userList","setUserList","currentUser","setCurrentUser","provided","handleLogin","credentials","matchedUser","find","user","username","password","console","log","Provider","value","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mason/projects/z-prefix-crud-app/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Inventory from \"./components/Inventory\";\nimport ItemDetails from \"./components/ItemDetails\";\nimport MyItems from \"./components/MyItems\";\nimport Login from \"./components/Login\";\nimport AppContext from \"./AppContext.js\";\n\nfunction App() {\n  const [itemList, setItemList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null); // New state to track the current user\n\n  const provided = {\n    itemList,\n    setItemList,\n    userList,\n    setUserList,\n    currentUser, // Pass the currentUser state to the context provider\n    setCurrentUser, // Pass the setCurrentUser function to the context provider\n  };\n\n  // Function to handle login\n  const handleLogin = (credentials) => {\n    // Perform the authentication logic here, e.g., checking the credentials against the userList state.\n    const matchedUser = userList.find(\n      (user) =>\n        user.username === credentials.username && user.password === credentials.password\n    );\n\n    if (matchedUser) {\n      setCurrentUser(matchedUser);\n    } else {\n      // Handle authentication failure (e.g., show an error message).\n      console.log(\"Invalid username or password\");\n    }\n  };\n\n  return (\n    <AppContext.Provider value={provided}>\n      <Router>\n        {/* <MyItems /> */}\n        <Routes>\n          {/* Pass the handleLogin function to the Login component */}\n          <Route path=\"/login\" element={<Login handleLogin={handleLogin} />} />\n          <Route path=\"/\" element={<Inventory />} />\n          <Route path=\"item/:id\" element={<ItemDetails />} />\n        </Routes>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMoB,QAAQ,GAAG;IACfN,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC,WAAW;IACXC,WAAW;IAAE;IACbC,cAAc,CAAE;EAClB,CAAC;;EAED;EACA,MAAME,WAAW,GAAIC,WAAW,IAAK;IACnC;IACA,MAAMC,WAAW,GAAGP,QAAQ,CAACQ,IAAI,CAC9BC,IAAI,IACHA,IAAI,CAACC,QAAQ,KAAKJ,WAAW,CAACI,QAAQ,IAAID,IAAI,CAACE,QAAQ,KAAKL,WAAW,CAACK,QAC5E,CAAC;IAED,IAAIJ,WAAW,EAAE;MACfJ,cAAc,CAACI,WAAW,CAAC;IAC7B,CAAC,MAAM;MACL;MACAK,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C;EACF,CAAC;EAED,oBACElB,OAAA,CAACF,UAAU,CAACqB,QAAQ;IAACC,KAAK,EAAEX,QAAS;IAAAY,QAAA,eACnCrB,OAAA,CAACT,MAAM;MAAA8B,QAAA,eAELrB,OAAA,CAACP,MAAM;QAAA4B,QAAA,gBAELrB,OAAA,CAACR,KAAK;UAAC8B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEvB,OAAA,CAACH,KAAK;YAACa,WAAW,EAAEA;UAAY;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrE3B,OAAA,CAACR,KAAK;UAAC8B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEvB,OAAA,CAACN,SAAS;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1C3B,OAAA,CAACR,KAAK;UAAC8B,IAAI,EAAC,UAAU;UAACC,OAAO,eAAEvB,OAAA,CAACL,WAAW;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B;AAACzB,EAAA,CA3CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}