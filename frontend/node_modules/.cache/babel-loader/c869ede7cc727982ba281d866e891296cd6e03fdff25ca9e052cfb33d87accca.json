{"ast":null,"code":"var _jsxFileName = \"/home/mason/projects/z-prefix-crud-app/frontend/src/components/Inventory.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inventory() {\n  _s();\n  const [itemList, setItemList] = useState();\n  useEffect(() => {\n    fetch('http://localhost:3001/items').then(response => response.json()).then(data => {\n      setItemList(data);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  if (itemList) {\n    console.log(itemList);\n    let itemNames = [];\n    let itemUserIds = [];\n    for (let i = 0; i < itemList.length; i++) {\n      let currentItemName = itemList[i].item_name;\n      itemNames.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: currentItemName\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }, this));\n      let currentItemUserId = itemList[i].user_id;\n      itemUserIds.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: currentItemUserId\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: itemNames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: itemUserIds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\n_s(Inventory, \"kX6MUdOsrtEje22WANBbP/do8bA=\");\n_c = Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Table","jsxDEV","_jsxDEV","Inventory","_s","itemList","setItemList","fetch","then","response","json","data","catch","error","console","log","itemNames","itemUserIds","i","length","currentItemName","item_name","push","children","fileName","_jsxFileName","lineNumber","columnNumber","currentItemUserId","user_id","_c","$RefreshReg$"],"sources":["/home/mason/projects/z-prefix-crud-app/frontend/src/components/Inventory.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\n\nexport default function Inventory() {\n  const [itemList, setItemList] = useState();\n\n  useEffect(() => {\n    fetch('http://localhost:3001/items')\n      .then((response) => response.json())\n      .then((data) => {\n        setItemList(data);\n      })\n      .catch((error) => {\n        console.error('Fetch error:', error);\n      });\n  }, []);\n\n  if (itemList) {\n    console.log(itemList);\n    let itemNames = [];\n    let itemUserIds = [];\n    for (let i = 0; i < itemList.length; i++) {\n      let currentItemName = itemList[i].item_name;\n      itemNames.push(<li key={i}>{currentItemName}</li>);\n      let currentItemUserId = itemList[i].user_id;\n      itemUserIds.push(<li key={i}>{currentItemUserId}</li>);\n    }\n\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <ul>{itemNames}</ul>\n          </Col>\n          <Col>\n            <ul>{itemUserIds}</ul>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  return null;\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,WAAW,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIR,QAAQ,EAAE;IACZS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrB,IAAIW,SAAS,GAAG,EAAE;IAClB,IAAIC,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,QAAQ,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,IAAIE,eAAe,GAAGf,QAAQ,CAACa,CAAC,CAAC,CAACG,SAAS;MAC3CL,SAAS,CAACM,IAAI,eAACpB,OAAA;QAAAqB,QAAA,EAAaH;MAAe,GAAnBF,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC,CAAC;MAClD,IAAIC,iBAAiB,GAAGvB,QAAQ,CAACa,CAAC,CAAC,CAACW,OAAO;MAC3CZ,WAAW,CAACK,IAAI,eAACpB,OAAA;QAAAqB,QAAA,EAAaK;MAAiB,GAArBV,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAAC,CAAC;IACxD;IAEA,oBACEzB,OAAA,CAACL,SAAS;MAAA0B,QAAA,eACRrB,OAAA,CAACJ,GAAG;QAAAyB,QAAA,gBACFrB,OAAA,CAACH,GAAG;UAAAwB,QAAA,eACFrB,OAAA;YAAAqB,QAAA,EAAKP;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNzB,OAAA,CAACH,GAAG;UAAAwB,QAAA,eACFrB,OAAA;YAAAqB,QAAA,EAAKN;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,OAAO,IAAI;AACb;AAACvB,EAAA,CAxCuBD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}