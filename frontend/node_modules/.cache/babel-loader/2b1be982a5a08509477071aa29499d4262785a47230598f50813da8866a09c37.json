{"ast":null,"code":"var _jsxFileName = \"/home/mason/projects/z-prefix-crud-app/frontend/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport AppContext from \"../AppContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  setIsLoggedIn,\n  closeModal\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    userList,\n    setCurrentUser\n  } = useContext(AppContext);\n  const handleLogin = () => {\n    // Find the user with the matching username and password\n    const user = userList.find(user => user.username === username && user.password === password);\n    setCurrentUser(user);\n    if (user) {\n      setIsLoggedIn(true);\n      closeModal(); // Close the modal after successful login\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#fff\",\n      padding: \"20px\",\n      borderRadius: \"5px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeModal,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"JoNGlx52Ty547Mf9jdHncOviKsU=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","AppContext","jsxDEV","_jsxDEV","LoginPage","setIsLoggedIn","closeModal","_s","username","setUsername","password","setPassword","userList","setCurrentUser","handleLogin","user","find","style","background","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/mason/projects/z-prefix-crud-app/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport AppContext from \"../AppContext.js\";\n\nfunction LoginPage({ setIsLoggedIn, closeModal }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { userList, setCurrentUser } = useContext(AppContext);\n\n  const handleLogin = () => {\n    // Find the user with the matching username and password\n    const user = userList.find(\n      (user) => user.username === username && user.password === password\n    );\n    setCurrentUser(user);\n\n    if (user) {\n      setIsLoggedIn(true);\n      closeModal(); // Close the modal after successful login\n    }\n  };\n\n  return (\n    <div style={{ background: \"#fff\", padding: \"20px\", borderRadius: \"5px\" }}>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={handleLogin}>Login</button>\n      <button onClick={closeModal}>Cancel</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,SAASA,CAAC;EAAEC,aAAa;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM;IAAEa,QAAQ;IAAEC;EAAe,CAAC,GAAGb,UAAU,CAACC,UAAU,CAAC;EAE3D,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAI,CACvBD,IAAI,IAAKA,IAAI,CAACP,QAAQ,KAAKA,QAAQ,IAAIO,IAAI,CAACL,QAAQ,KAAKA,QAC5D,CAAC;IACDG,cAAc,CAACE,IAAI,CAAC;IAEpB,IAAIA,IAAI,EAAE;MACRV,aAAa,CAAC,IAAI,CAAC;MACnBC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;;EAED,oBACEH,OAAA;IAAKc,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACvElB,OAAA;MAAAkB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFtB,OAAA;MACEuB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAElB,WAAY;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5CtB,OAAA;MAAQ6B,OAAO,EAAE1B,UAAW;MAAAe,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAClB,EAAA,CAtCQH,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}