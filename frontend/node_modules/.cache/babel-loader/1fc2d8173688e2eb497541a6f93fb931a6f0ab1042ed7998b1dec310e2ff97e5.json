{"ast":null,"code":"var _jsxFileName = \"/home/mason/projects/z-prefix-crud-app/frontend/src/components/EditUserItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditUserItem({\n  item,\n  setUserItems\n}) {\n  _s();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editItem, setEditItem] = useState(item);\n  const handleToggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditItem(prevItem => ({\n      ...prevItem,\n      [name]: value\n    }));\n  };\n  const handleUpdateItem = () => {\n    // Send PUT request to update the item in the database\n    fetch(`http://localhost:3001/user-items/${item.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editItem)\n    }).then(response => response.json()).then(data => {\n      // Update the userItems state with the updated item\n      setUserItems(prevUserItems => prevUserItems.map(userItem => userItem.id === item.id ? {\n        ...userItem,\n        ...data\n      } : userItem));\n\n      // Exit edit mode after successful update\n      setIsEditMode(false);\n    }).catch(error => {\n      console.error('Update error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: isEditMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"item_name\",\n        value: editItem.item_name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this) : item.item_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: isEditMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"quantity\",\n        value: editItem.quantity,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this) : item.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: item.user_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: isEditMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: editItem.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this) : item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateItem,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleEditMode,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleEditMode,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(EditUserItem, \"gTSsMGskHq2sOYpymzTb6n+5JWk=\");\n_c = EditUserItem;\nvar _c;\n$RefreshReg$(_c, \"EditUserItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUserItem","item","setUserItems","_s","isEditMode","setIsEditMode","editItem","setEditItem","handleToggleEditMode","handleInputChange","e","name","value","target","prevItem","handleUpdateItem","fetch","id","method","headers","body","JSON","stringify","then","response","json","data","prevUserItems","map","userItem","catch","error","console","children","type","item_name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","quantity","user_id","description","onClick","_c","$RefreshReg$"],"sources":["/home/mason/projects/z-prefix-crud-app/frontend/src/components/EditUserItem.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function EditUserItem({ item, setUserItems }) {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editItem, setEditItem] = useState(item);\n\n  const handleToggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditItem((prevItem) => ({\n      ...prevItem,\n      [name]: value,\n    }));\n  };\n\n  const handleUpdateItem = () => {\n    // Send PUT request to update the item in the database\n    fetch(`http://localhost:3001/user-items/${item.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(editItem),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the userItems state with the updated item\n        setUserItems((prevUserItems) =>\n          prevUserItems.map((userItem) =>\n            userItem.id === item.id ? { ...userItem, ...data } : userItem\n          )\n        );\n\n        // Exit edit mode after successful update\n        setIsEditMode(false);\n      })\n      .catch((error) => {\n        console.error('Update error:', error);\n      });\n  };\n\n  return (\n    <tr>\n      <td>{isEditMode ? <input type=\"text\" name=\"item_name\" value={editItem.item_name} onChange={handleInputChange} /> : item.item_name}</td>\n      <td>{isEditMode ? <input type=\"text\" name=\"quantity\" value={editItem.quantity} onChange={handleInputChange} /> : item.quantity}</td>\n      <td>{item.user_id}</td>\n      <td>{isEditMode ? <input type=\"text\" name=\"description\" value={editItem.description} onChange={handleInputChange} /> : item.description}</td>\n      <td>\n        {isEditMode ? (\n          <>\n            <button onClick={handleUpdateItem}>Save</button>\n            <button onClick={handleToggleEditMode}>Cancel</button>\n          </>\n        ) : (\n          <button onClick={handleToggleEditMode}>Edit</button>\n        )}\n      </td>\n    </tr>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}